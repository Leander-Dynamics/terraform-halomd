# Azure Starter Pipeline
#trigger:
#  - master

#  azureSPNName: 'de-arbitrationpoccalculator' #get it from your AzureDevOps portal
#  azureAppServiceName: 'arbitrationPOCCalculator' #get it from your Azure portal

pool:
  vmImage: windows-latest
    demands: npm
    variables:
      ArtifactName: 'ArbitrationPOCCalculator'
      BuildConfiguration: 'Release'
      BuildPlatform: 'Any CPU'
      DotNetFramework: 'net6.0'
      DotNetVersion: '6.0.x'
      Solution: '**/*.sln'
      TargetRuntime: 'win-x86'

#- task: UseDotNet@2
#  inputs:
#    packageType: sdk
#    version: $(dotNetVersion)
#- script: dotnet build --configuration $(buildConfiguration)
#  displayName: 'Build .NET Core 6 Application'

# Publish it as .NET 6 self-contained application
#- task: DotNetCoreCLI@2
#  displayName: 'Build Application'
#  inputs:
#    command: 'publish'
#    publishWebProjects: true
    # next step omits --self-contained since the target platform already has .net core on it. It targeting Linux, include --self-contained
#    arguments: '--configuration $(buildConfiguration) --framework $(docNetFramework) --runtime $(targetRuntime) --output $(Build.BinariesDirectory)/$(Build.BuildId)'
#    zipAfterPublish: true

# Package the file and upload as an artifact of the build
#- task: PublishBuildArtifacts@1
#  displayName: 'Publish Web Artifacts'
#  inputs:
#    targetPath: '$(Build.ArtifactStagingDirectory)'
#    artifactName: 'arbitrationPOCCalculator'

# Publish it to the Azure App Service - needs a valid SPN to work
#- task: AzureWebApp@1
#  inputs:
#    appType: webApp
#    azureSubscription: $(azureSPNName)
#    appName: $(azureAppServiceName)
#    package: $(Build.ArtifactStagingDirectory)/**/*.zip